{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/to-do-app/src/components/EditTodoDialog.jsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTodoDialog(_ref) {\n  let {\n    open,\n    dialogHandler\n  } = _ref;\n  const Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      ref: ref,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }); // const [open, setOpen] = React.useState(false);\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: dialogHandler,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Use Google's location service?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"alert-dialog-slide-description\",\n        children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: dialogHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = EditTodoDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodoDialog\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","EditTodoDialog","open","dialogHandler","Transition","forwardRef","props","ref"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/to-do-app/src/components/EditTodoDialog.jsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nexport default function EditTodoDialog({open, dialogHandler}) {\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction = \"down\" ref={ref} {...props} />;\n})\n\n  // const [open, setOpen] = React.useState(false);\n\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={dialogHandler}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>{\"Use Google's location service?\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          Let Google help apps determine location. This means sending anonymous\n          location data to Google, even when no apps are running.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={dialogHandler}>Cancel</Button>\n        <Button>Change</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,eAAe,SAASC,cAAT,OAA+C;EAAA,IAAvB;IAACC,IAAD;IAAOC;EAAP,CAAuB;EAE9D,MAAMC,UAAU,gBAAGX,KAAK,CAACY,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;IAClE,oBAAO,QAAC,KAAD;MAAO,SAAS,EAAG,MAAnB;MAA0B,GAAG,EAAEA,GAA/B;MAAA,GAAwCD;IAAxC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFkB,CAAnB,CAF8D,CAM5D;EAEA;EACA;EACA;EAEA;EACA;EACA;;EAEA,oBACE,QAAC,MAAD;IACE,IAAI,EAAEJ,IADR;IAEE,mBAAmB,EAAEE,UAFvB;IAGE,WAAW,MAHb;IAIE,OAAO,EAAED,aAJX;IAKE,oBAAiB,gCALnB;IAAA,wBAOE,QAAC,WAAD;MAAA,UAAc;IAAd;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,aAAD;MAAA,uBACE,QAAC,iBAAD;QAAmB,EAAE,EAAC,gCAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF,eAcE,QAAC,aAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,OAAO,EAAEA,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;KArCuBF,c"},"metadata":{},"sourceType":"module"}